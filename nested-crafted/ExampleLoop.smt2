(set-logic HORN)
(set-info :source |
  Benchmark: ../golem/build/ExampleLoop.c
  Generated by Korn 0.4 https://github.com/gernst/korn
|)



(declare-fun $foo_if2 (Int Int Int Int Int Int) Bool)
(declare-fun $foo_pre () Bool)
(declare-fun $foo_sum1 (Int Int Int) Bool)
(declare-fun foo () Bool)
(declare-fun $__VERIFIER_assert_pre (Int) Bool)
(declare-fun $__VERIFIER_assert_if1 (Int Int) Bool)
(declare-fun __VERIFIER_assert (Int) Bool)
(declare-fun $foo_inv1 (Int Int Int) Bool)
(declare-fun $__VERIFIER_assert_ERROR (Int Int) Bool)

; label ERROR
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (= cond!1 0)))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_ERROR cond!1 cond!1))))

; error
(assert
  (forall ((cond!1 Int) (cond!2 Int))
    (=> (and ($__VERIFIER_assert_ERROR cond!1 cond!2))
        false)))

; if else
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (not (= cond!1 0))))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_if1 cond!1 cond!1))))

; post __VERIFIER_assert
(assert
  (forall ((cond!1 Int) (cond!3 Int))
    (=> (and ($__VERIFIER_assert_if1 cond!1 cond!3))
        (__VERIFIER_assert cond!1))))

; loop entry $foo_inv1 (line 11)
(assert
  (forall ((n!6 Int))
    (=> (and (<= 0 n!6)
             $foo_pre)
        ($foo_inv1 0 n!6 n!6))))

; loop term $foo_sum1 (line 11)
(assert
  (forall ((x!7 Int) (i!8 Int) (n!9 Int))
    (=> (and (not (> i!8 0))
             ($foo_inv1 x!7 i!8 n!9))
        ($foo_sum1 x!7 i!8 n!9))))

; if then
(assert
  (forall ((x!7 Int) (i!8 Int) (n!9 Int))
    (=> (and (= (+ (- n!9 i!8) x!7) 500)
             (> i!8 0)
             ($foo_inv1 x!7 i!8 n!9))
        ($foo_if2 x!7 i!8 n!9 (+ x!7 2) i!8 n!9))))

; if else
(assert
  (forall ((x!7 Int) (i!8 Int) (n!9 Int))
    (=> (and (not (= (+ (- n!9 i!8) x!7) 500))
             (> i!8 0)
             ($foo_inv1 x!7 i!8 n!9))
        ($foo_if2 x!7 i!8 n!9 (+ x!7 1) i!8 n!9))))

; forwards $foo_inv1 (line 11)
(assert
  (forall ((n!9 Int) (x!10 Int) (i!8 Int) (x!7 Int) (n!12 Int) (i!11 Int))
    (=> (and ($foo_if2 x!7 i!8 n!9 x!10 i!11 n!12))
        ($foo_inv1 x!10 (- i!11 1) n!12))))

; VERIFIER_assert (= x!13 n!15)
(assert
  (forall ((x!13 Int) (n!15 Int) (i!14 Int))
    (=> (and (not (= x!13 n!15))
             ($foo_sum1 x!13 i!14 n!15))
        false)))

; post foo
(assert
  (forall ((x!13 Int) (i!14 Int) (n!15 Int))
    (=> (and ($foo_sum1 x!13 i!14 n!15))
        foo)))

(check-sat)
