(set-logic HORN)
(set-info :source |
  Benchmark: ../golem/build/RealCodeNested/originalcodeFlattenSeaHornsceleton.c
  Generated by Korn 0.4 https://github.com/gernst/korn
|)


(declare-fun $main_if6 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_inv3 (Int Int Int Int Int Int Int) Bool)
(declare-fun $main_sum1 (Int Int Int Int Int Int Int) Bool)
(declare-fun __assert_fail (Int Int Int Int) Bool)
(declare-fun $main_loop (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $__VERIFIER_assert_pre (Int) Bool)
(declare-fun $main_if5 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $__VERIFIER_assert_if1 (Int Int) Bool)
(declare-fun $n_pre () Bool)
(declare-fun $main_sum4 (Int Int Int Int Int Int Int) Bool)
(declare-fun $main_inv2 (Int Int Int Int Int Int Int) Bool)
(declare-fun $main_sum2 (Int Int Int Int Int Int Int) Bool)
(declare-fun $main_if3 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_sum3 (Int Int Int Int Int Int Int) Bool)
(declare-fun $main_inv4 (Int Int Int Int Int Int Int) Bool)
(declare-fun __VERIFIER_assert (Int) Bool)
(declare-fun $__assert_fail_pre (Int Int Int Int) Bool)
(declare-fun $main_if2 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_if4 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_inv1 (Int Int Int Int Int Int Int) Bool)
(declare-fun n (Int) Bool)
(declare-fun $__VERIFIER_assert_ERROR (Int Int) Bool)

; label ERROR
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (= cond!1 0)))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_ERROR cond!1 cond!1))))

; error
(assert
  (forall ((cond!1 Int) (cond!2 Int))
    (=> (and ($__VERIFIER_assert_ERROR cond!1 cond!2))
        false)))

; if else
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (not (= cond!1 0))))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_if1 cond!1 cond!1))))

; post __VERIFIER_assert
(assert
  (forall ((cond!1 Int) (cond!3 Int))
    (=> (and ($__VERIFIER_assert_if1 cond!1 cond!3))
        (__VERIFIER_assert cond!1))))

; loop entry $main_inv1 (line 18)
(assert
  (forall ((Ty!6 Int) (Worklist!5 Int) (e!10 Int) (i!9 Int) (TempRes!4 Int))
    (=> (and (<= 0 Ty!6)
             (<= Ty!6 10)
             (= e!10 10)
             (= i!9 0)
             (= Worklist!5 1)
             (= TempRes!4 0))
        ($main_inv1 TempRes!4 Worklist!5 Ty!6 i!9 e!10 i!9 e!10))))

; loop term $main_sum1 (line 18)
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (i!16 Int) (Worklist!12 Int) (Ty!13 Int))
    (=> (and (not (> Worklist!12 0))
             ($main_inv1 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17))
        ($main_sum1 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17))))

; label loop
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (i!16 Int) (Worklist!12 Int) (Ty!13 Int))
    (=> (and (> Worklist!12 0)
             ($main_inv1 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17))
        ($main_loop TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17))))

; goto loop
(assert
  (forall ((e!17 Int) (i!23 Int) (Ty!20 Int) (e!24 Int) (i!16 Int) (TempRes!18 Int) (Worklist!12 Int) (Ty!13 Int) (Worklist!19 Int) (TempRes!11 Int))
    (=> (and (= Ty!20 1)
             (<= 0 Ty!20)
             (<= Ty!20 10)
             ($main_loop TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!18 Worklist!19 Ty!20 i!23 e!24 i!23 e!24))
        ($main_loop TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 (+ TempRes!18 1) (- Worklist!19 1) (mod (+ Ty!20 1) 5) i!23 e!24 i!23 e!24))))

; if else
(assert
  (forall ((e!17 Int) (i!23 Int) (Ty!20 Int) (e!24 Int) (i!16 Int) (TempRes!18 Int) (Worklist!12 Int) (Ty!13 Int) (Worklist!19 Int) (TempRes!11 Int))
    (=> (and (not (= Ty!20 1))
             (<= 0 Ty!20)
             (<= Ty!20 10)
             ($main_loop TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!18 Worklist!19 Ty!20 i!23 e!24 i!23 e!24))
        ($main_if2 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!18 (- Worklist!19 1) Ty!20 i!23 e!24 i!23 e!24))))

; goto loop
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (Worklist!26 Int) (Ty!27 Int) (i!16 Int) (TempRes!25 Int) (e!31 Int) (Ty!13 Int) (Worklist!12 Int) (i!30 Int))
    (=> (and (not (or (or (= Ty!27 2) (= Ty!27 3)) (= Ty!27 4)))
             ($main_if2 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!25 Worklist!26 Ty!27 i!30 e!31 i!30 e!31))
        ($main_loop TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 (+ TempRes!25 1) Worklist!26 (mod (+ Ty!27 1) 5) i!30 e!31 i!30 e!31))))

; if else
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (Worklist!26 Int) (Ty!27 Int) (i!16 Int) (TempRes!25 Int) (e!31 Int) (Ty!13 Int) (Worklist!12 Int) (i!30 Int))
    (=> (and (not (not (or (or (= Ty!27 2) (= Ty!27 3)) (= Ty!27 4))))
             ($main_if2 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!25 Worklist!26 Ty!27 i!30 e!31 i!30 e!31))
        ($main_if3 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!25 Worklist!26 Ty!27 i!30 e!31 i!30 e!31))))

; loop entry $main_inv2 (line 41)
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (i!37 Int) (Ty!34 Int) (Worklist!12 Int) (TempRes!32 Int) (e!38 Int) (i!16 Int) (Worklist!33 Int) (Ty!13 Int))
    (=> (and (= e!38 10)
             (= i!37 0)
             (= Ty!34 2)
             ($main_if3 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!32 Worklist!33 Ty!34 i!37 e!38 i!37 e!38))
        ($main_inv2 TempRes!32 Worklist!33 (mod (+ Ty!34 1) 5) i!37 e!38 i!37 e!38))))

; loop term $main_sum2 (line 41)
(assert
  (forall ((i!44 Int) (TempRes!39 Int) (e!45 Int) (Ty!41 Int) (Worklist!40 Int))
    (=> (and (not (not (= i!44 e!45)))
             ($main_inv2 TempRes!39 Worklist!40 Ty!41 i!44 e!45 i!44 e!45))
        ($main_sum2 TempRes!39 Worklist!40 Ty!41 i!44 e!45 i!44 e!45))))

; forwards $main_inv2 (line 41)
(assert
  (forall ((i!44 Int) (TempRes!39 Int) (e!45 Int) (Ty!41 Int) (Worklist!40 Int))
    (=> (and (not (= i!44 e!45))
             ($main_inv2 TempRes!39 Worklist!40 Ty!41 i!44 e!45 i!44 e!45))
        ($main_inv2 TempRes!39 (+ Worklist!40 1) Ty!41 (+ i!44 1) e!45 (+ i!44 1) e!45))))

; goto loop
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (i!51 Int) (Worklist!12 Int) (TempRes!46 Int) (Ty!13 Int) (i!16 Int) (Worklist!47 Int) (e!52 Int) (Ty!48 Int))
    (=> (and ($main_sum2 TempRes!46 Worklist!47 Ty!48 i!51 e!52 i!51 e!52))
        ($main_loop TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!46 Worklist!47 Ty!48 i!51 e!52 i!51 e!52))))

; if else
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (i!37 Int) (Ty!34 Int) (Worklist!12 Int) (TempRes!32 Int) (e!38 Int) (i!16 Int) (Worklist!33 Int) (Ty!13 Int))
    (=> (and (not (= Ty!34 2))
             ($main_if3 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!32 Worklist!33 Ty!34 i!37 e!38 i!37 e!38))
        ($main_if4 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!32 Worklist!33 Ty!34 i!37 e!38 i!37 e!38))))

; loop entry $main_inv3 (line 51)
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (Ty!55 Int) (TempRes!53 Int) (e!59 Int) (i!16 Int) (Worklist!12 Int) (i!58 Int) (Worklist!54 Int) (Ty!13 Int))
    (=> (and (= Ty!55 3)
             ($main_if4 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!53 Worklist!54 Ty!55 i!58 e!59 i!58 e!59))
        ($main_inv3 TempRes!53 Worklist!54 (mod (+ Ty!55 1) 5) i!58 e!59 i!58 e!59))))

; loop term $main_sum3 (line 51)
(assert
  (forall ((i!65 Int) (e!66 Int) (Ty!62 Int) (Worklist!61 Int) (TempRes!60 Int))
    (=> (and (not (not (= i!65 e!66)))
             ($main_inv3 TempRes!60 Worklist!61 Ty!62 i!65 e!66 i!65 e!66))
        ($main_sum3 TempRes!60 Worklist!61 Ty!62 i!65 e!66 i!65 e!66))))

; forwards $main_inv3 (line 51)
(assert
  (forall ((i!65 Int) (e!66 Int) (Ty!62 Int) (Worklist!61 Int) (TempRes!60 Int))
    (=> (and (not (= i!65 e!66))
             ($main_inv3 TempRes!60 Worklist!61 Ty!62 i!65 e!66 i!65 e!66))
        ($main_inv3 TempRes!60 (+ Worklist!61 1) Ty!62 (+ i!65 1) e!66 (+ i!65 1) e!66))))

; goto loop
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (Worklist!68 Int) (Ty!69 Int) (Worklist!12 Int) (Ty!13 Int) (i!72 Int) (e!73 Int) (TempRes!67 Int) (i!16 Int))
    (=> (and ($main_sum3 TempRes!67 Worklist!68 Ty!69 i!72 e!73 i!72 e!73))
        ($main_loop TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!67 Worklist!68 Ty!69 i!72 e!73 i!72 e!73))))

; if else
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (Ty!55 Int) (TempRes!53 Int) (e!59 Int) (i!16 Int) (Worklist!12 Int) (i!58 Int) (Worklist!54 Int) (Ty!13 Int))
    (=> (and (not (= Ty!55 3))
             ($main_if4 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!53 Worklist!54 Ty!55 i!58 e!59 i!58 e!59))
        ($main_if5 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!53 Worklist!54 Ty!55 i!58 e!59 i!58 e!59))))

; loop entry $main_inv4 (line 61)
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (Ty!76 Int) (i!79 Int) (Worklist!12 Int) (Ty!13 Int) (Worklist!75 Int) (TempRes!74 Int) (i!16 Int) (e!80 Int))
    (=> (and (= Ty!76 4)
             ($main_if5 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!74 Worklist!75 Ty!76 i!79 e!80 i!79 e!80))
        ($main_inv4 TempRes!74 Worklist!75 (mod (+ Ty!76 1) 5) i!79 e!80 i!79 e!80))))

; loop term $main_sum4 (line 61)
(assert
  (forall ((Ty!83 Int) (TempRes!81 Int) (Worklist!82 Int) (i!86 Int) (e!87 Int))
    (=> (and (not (not (= i!86 e!87)))
             ($main_inv4 TempRes!81 Worklist!82 Ty!83 i!86 e!87 i!86 e!87))
        ($main_sum4 TempRes!81 Worklist!82 Ty!83 i!86 e!87 i!86 e!87))))

; forwards $main_inv4 (line 61)
(assert
  (forall ((Ty!83 Int) (TempRes!81 Int) (Worklist!82 Int) (i!86 Int) (e!87 Int))
    (=> (and (not (= i!86 e!87))
             ($main_inv4 TempRes!81 Worklist!82 Ty!83 i!86 e!87 i!86 e!87))
        ($main_inv4 TempRes!81 (+ Worklist!82 1) Ty!83 (+ i!86 1) e!87 (+ i!86 1) e!87))))

; if then
(assert
  (forall ((Ty!90 Int) (e!17 Int) (TempRes!11 Int) (i!93 Int) (i!16 Int) (e!94 Int) (TempRes!88 Int) (Worklist!12 Int) (Ty!13 Int) (Worklist!89 Int))
    (=> (and ($main_sum4 TempRes!88 Worklist!89 Ty!90 i!93 e!94 i!93 e!94))
        ($main_if6 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!88 Worklist!89 Ty!90 i!93 e!94 i!93 e!94))))

; if else
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (Ty!76 Int) (i!79 Int) (Worklist!12 Int) (Ty!13 Int) (Worklist!75 Int) (TempRes!74 Int) (i!16 Int) (e!80 Int))
    (=> (and (not (= Ty!76 4))
             ($main_if5 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!74 Worklist!75 Ty!76 i!79 e!80 i!79 e!80))
        ($main_if6 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!74 Worklist!75 Ty!76 i!79 e!80 i!79 e!80))))

; forwards $main_inv1 (line 18)
(assert
  (forall ((e!17 Int) (TempRes!11 Int) (i!16 Int) (Ty!97 Int) (Worklist!12 Int) (Worklist!96 Int) (i!100 Int) (TempRes!95 Int) (Ty!13 Int) (e!101 Int))
    (=> (and ($main_if6 TempRes!11 Worklist!12 Ty!13 i!16 e!17 i!16 e!17 TempRes!95 Worklist!96 Ty!97 i!100 e!101 i!100 e!101))
        ($main_inv1 TempRes!95 (- Worklist!96 2) Ty!97 0 e!101 0 e!101))))

; VERIFIER_assert (> Worklist!103 0)
(assert
  (forall ((Ty!104 Int) (Worklist!103 Int) (i!107 Int) (e!108 Int) (TempRes!102 Int))
    (=> (and (not (> Worklist!103 0))
             ($main_sum1 TempRes!102 Worklist!103 Ty!104 i!107 e!108 i!107 e!108))
        false)))

(check-sat)
