(set-logic HORN)
(set-info :source |
  Benchmark: ../golem/build/RealCodeNested/originalcodeMergedTransitionsceleton4.c
  Generated by Korn 0.4 https://github.com/gernst/korn
|)


(declare-fun __assert_fail (Int Int Int Int) Bool)
(declare-fun $main_if3 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_inv3 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $__VERIFIER_assert_pre (Int) Bool)
(declare-fun $__VERIFIER_assert_if1 (Int Int) Bool)
(declare-fun $main_inv2 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_sum3 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_sum4 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_inv4 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_if2 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_inv1 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_sum1 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_sum2 (Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun __VERIFIER_assert (Int) Bool)
(declare-fun $__assert_fail_pre (Int Int Int Int) Bool)
(declare-fun $__VERIFIER_assert_ERROR (Int Int) Bool)

; label ERROR
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (= cond!1 0)))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_ERROR cond!1 cond!1))))

; error
(assert
  (forall ((cond!1 Int) (cond!2 Int))
    (=> (and ($__VERIFIER_assert_ERROR cond!1 cond!2))
        false)))

; if else
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (not (= cond!1 0))))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_if1 cond!1 cond!1))))

; post __VERIFIER_assert
(assert
  (forall ((cond!1 Int) (cond!3 Int))
    (=> (and ($__VERIFIER_assert_if1 cond!1 cond!3))
        (__VERIFIER_assert cond!1))))

; loop entry $main_inv1 (line 24)
(assert
  (forall ((coreVars!4 Int) (loopSize!9 Int) (loop!12 Int) (n!14 Int) (i!11 Int) (auxiliaryVars!5 Int) (var!10 Int) (someCondition!16 Int) (allVars!6 Int) (generalMTr!15 Int) (edgeVars!7 Int) (loops!8 Int) (loopMTr!13 Int))
    (=> (and (= generalMTr!15 0)
             (= n!14 0)
             (= loopMTr!13 0)
             (= loop!12 0)
             (= i!11 0)
             (= var!10 0)
             (<= (* edgeVars!7 2) allVars!6)
             (<= allVars!6 (* edgeVars!7 10))
             (<= 5 edgeVars!7)
             (<= edgeVars!7 1000)
             (<= 5 loops!8)
             (<= loops!8 100)
             (<= 10 loopSize!9)
             (<= loopSize!9 100)
             (= auxiliaryVars!5 0)
             (= coreVars!4 0))
        ($main_inv1 coreVars!4 auxiliaryVars!5 allVars!6 edgeVars!7 loops!8 loopSize!9 var!10 i!11 loop!12 loopMTr!13 n!14 generalMTr!15 someCondition!16))))

; loop term $main_sum1 (line 24)
(assert
  (forall ((var!23 Int) (loopSize!22 Int) (auxiliaryVars!18 Int) (loop!25 Int) (loopMTr!26 Int) (n!27 Int) (i!24 Int) (edgeVars!20 Int) (coreVars!17 Int) (generalMTr!28 Int) (someCondition!29 Int) (allVars!19 Int) (loops!21 Int))
    (=> (and (not (< var!23 edgeVars!20))
             ($main_inv1 coreVars!17 auxiliaryVars!18 allVars!19 edgeVars!20 loops!21 loopSize!22 var!23 i!24 loop!25 loopMTr!26 n!27 generalMTr!28 someCondition!29))
        ($main_sum1 coreVars!17 auxiliaryVars!18 allVars!19 edgeVars!20 loops!21 loopSize!22 var!23 i!24 loop!25 loopMTr!26 n!27 generalMTr!28 someCondition!29))))

; forwards $main_inv1 (line 24)
(assert
  (forall ((var!23 Int) (loopSize!22 Int) (auxiliaryVars!18 Int) (loop!25 Int) (loopMTr!26 Int) (n!27 Int) (i!24 Int) (edgeVars!20 Int) (coreVars!17 Int) (generalMTr!28 Int) (someCondition!29 Int) (allVars!19 Int) (loops!21 Int))
    (=> (and (< var!23 edgeVars!20)
             ($main_inv1 coreVars!17 auxiliaryVars!18 allVars!19 edgeVars!20 loops!21 loopSize!22 var!23 i!24 loop!25 loopMTr!26 n!27 generalMTr!28 someCondition!29))
        ($main_inv1 (+ (+ coreVars!17 1) 1) auxiliaryVars!18 allVars!19 edgeVars!20 loops!21 loopSize!22 (+ var!23 1) i!24 loop!25 loopMTr!26 n!27 generalMTr!28 someCondition!29))))

; loop entry $main_inv2 (line 31)
(assert
  (forall ((coreVars!30 Int) (loop!38 Int) (loops!34 Int) (n!40 Int) (generalMTr!41 Int) (loopMTr!39 Int) (loopSize!35 Int) (edgeVars!33 Int) (auxiliaryVars!31 Int) (var!36 Int) (i!37 Int) (allVars!32 Int) (someCondition!42 Int))
    (=> (and ($main_sum1 coreVars!30 auxiliaryVars!31 allVars!32 edgeVars!33 loops!34 loopSize!35 var!36 i!37 loop!38 loopMTr!39 n!40 generalMTr!41 someCondition!42))
        ($main_inv2 coreVars!30 auxiliaryVars!31 allVars!32 edgeVars!33 loops!34 loopSize!35 var!36 i!37 loop!38 loopMTr!39 n!40 generalMTr!41 someCondition!42))))

; loop term $main_sum2 (line 31)
(assert
  (forall ((loops!47 Int) (allVars!45 Int) (generalMTr!54 Int) (i!50 Int) (edgeVars!46 Int) (someCondition!55 Int) (n!53 Int) (loopMTr!52 Int) (auxiliaryVars!44 Int) (loopSize!48 Int) (var!49 Int) (loop!51 Int) (coreVars!43 Int))
    (=> (and (not (< loop!51 loops!47))
             ($main_inv2 coreVars!43 auxiliaryVars!44 allVars!45 edgeVars!46 loops!47 loopSize!48 var!49 i!50 loop!51 loopMTr!52 n!53 generalMTr!54 someCondition!55))
        ($main_sum2 coreVars!43 auxiliaryVars!44 allVars!45 edgeVars!46 loops!47 loopSize!48 var!49 i!50 loop!51 loopMTr!52 n!53 generalMTr!54 someCondition!55))))

; loop entry $main_inv3 (line 33)
(assert
  (forall ((loops!47 Int) (allVars!45 Int) (generalMTr!54 Int) (i!50 Int) (edgeVars!46 Int) (someCondition!55 Int) (n!53 Int) (loopMTr!52 Int) (auxiliaryVars!44 Int) (loopSize!48 Int) (var!49 Int) (loop!51 Int) (coreVars!43 Int))
    (=> (and (< loop!51 loops!47)
             ($main_inv2 coreVars!43 auxiliaryVars!44 allVars!45 edgeVars!46 loops!47 loopSize!48 var!49 i!50 loop!51 loopMTr!52 n!53 generalMTr!54 someCondition!55))
        ($main_inv3 coreVars!43 auxiliaryVars!44 allVars!45 edgeVars!46 loops!47 loopSize!48 0 i!50 loop!51 loopMTr!52 n!53 generalMTr!54 someCondition!55))))

; loop term $main_sum3 (line 33)
(assert
  (forall ((loops!60 Int) (someCondition!68 Int) (var!62 Int) (coreVars!56 Int) (auxiliaryVars!57 Int) (loopMTr!65 Int) (i!63 Int) (loopSize!61 Int) (generalMTr!67 Int) (edgeVars!59 Int) (allVars!58 Int) (loop!64 Int) (n!66 Int))
    (=> (and (not (< i!63 loopSize!61))
             ($main_inv3 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68))
        ($main_sum3 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68))))

; ite left
(assert
  (forall ((loops!60 Int) (someCondition!68 Int) (var!62 Int) (coreVars!56 Int) (auxiliaryVars!57 Int) (loopMTr!65 Int) (i!63 Int) (loopSize!61 Int) (generalMTr!67 Int) (edgeVars!59 Int) (allVars!58 Int) (loop!64 Int) (n!66 Int))
    (=> (and (= i!63 0)
             (< i!63 loopSize!61)
             ($main_inv3 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68))
        ($main_if2 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68))))

; ite right
(assert
  (forall ((loops!60 Int) (someCondition!68 Int) (var!62 Int) (coreVars!56 Int) (auxiliaryVars!57 Int) (loopMTr!65 Int) (i!63 Int) (loopSize!61 Int) (generalMTr!67 Int) (edgeVars!59 Int) (allVars!58 Int) (loop!64 Int) (n!66 Int))
    (=> (and (not (= i!63 0))
             (< i!63 loopSize!61)
             ($main_inv3 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68))
        ($main_if2 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68))))

; forwards $main_inv3 (line 33)
(assert
  (forall ((loops!60 Int) (someCondition!81 Int) (loops!73 Int) (someCondition!68 Int) (loop!77 Int) (edgeVars!72 Int) (var!62 Int) (var!75 Int) (coreVars!56 Int) (auxiliaryVars!70 Int) (loopSize!61 Int) (allVars!71 Int) (loopMTr!78 Int) (generalMTr!67 Int) (edgeVars!59 Int) (i!76 Int) (generalMTr!80 Int) (auxiliaryVars!57 Int) (n!79 Int) (coreVars!69 Int) (loopMTr!65 Int) (i!63 Int) (loopSize!74 Int) (allVars!58 Int) (loop!64 Int) (n!66 Int))
    (=> (and ($main_if2 coreVars!56 auxiliaryVars!57 allVars!58 edgeVars!59 loops!60 loopSize!61 var!62 i!63 loop!64 loopMTr!65 n!66 generalMTr!67 someCondition!68 coreVars!69 auxiliaryVars!70 allVars!71 edgeVars!72 loops!73 loopSize!74 var!75 i!76 loop!77 loopMTr!78 n!79 generalMTr!80 someCondition!81))
        ($main_inv3 coreVars!69 auxiliaryVars!70 allVars!71 edgeVars!72 loops!73 loopSize!74 var!75 (+ i!76 1) loop!77 (+ loopMTr!78 (ite (= i!63 0) (+ n!66 2) (+ n!66 4))) (ite (= i!63 0) (+ n!66 2) (+ n!66 4)) generalMTr!80 someCondition!81))))

; loop entry $main_inv4 (line 39)
(assert
  (forall ((loop!90 Int) (someCondition!94 Int) (coreVars!82 Int) (n!92 Int) (var!88 Int) (i!89 Int) (generalMTr!93 Int) (loops!86 Int) (allVars!84 Int) (loopMTr!91 Int) (auxiliaryVars!83 Int) (edgeVars!85 Int) (loopSize!87 Int))
    (=> (and ($main_sum3 coreVars!82 auxiliaryVars!83 allVars!84 edgeVars!85 loops!86 loopSize!87 var!88 i!89 loop!90 loopMTr!91 n!92 generalMTr!93 someCondition!94))
        ($main_inv4 coreVars!82 auxiliaryVars!83 allVars!84 edgeVars!85 loops!86 loopSize!87 var!88 i!89 loop!90 loopMTr!91 n!92 generalMTr!93 someCondition!94))))

; loop term $main_sum4 (line 39)
(assert
  (forall ((i!102 Int) (loopMTr!104 Int) (var!101 Int) (loopSize!100 Int) (someCondition!107 Int) (loops!99 Int) (edgeVars!98 Int) (n!105 Int) (auxiliaryVars!96 Int) (allVars!97 Int) (loop!103 Int) (generalMTr!106 Int) (coreVars!95 Int))
    (=> (and (not (< var!101 allVars!97))
             ($main_inv4 coreVars!95 auxiliaryVars!96 allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107))
        ($main_sum4 coreVars!95 auxiliaryVars!96 allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107))))

; if then
(assert
  (forall ((i!102 Int) (loopMTr!104 Int) (var!101 Int) (loopSize!100 Int) (someCondition!107 Int) (loops!99 Int) (edgeVars!98 Int) (n!105 Int) (auxiliaryVars!96 Int) (allVars!97 Int) (loop!103 Int) (generalMTr!106 Int) (coreVars!95 Int))
    (=> (and (> someCondition!107 0)
             (< var!101 allVars!97)
             ($main_inv4 coreVars!95 auxiliaryVars!96 allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107))
        ($main_if3 coreVars!95 auxiliaryVars!96 allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107 coreVars!95 (+ auxiliaryVars!96 1) allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107))))

; if else
(assert
  (forall ((i!102 Int) (loopMTr!104 Int) (var!101 Int) (loopSize!100 Int) (someCondition!107 Int) (loops!99 Int) (edgeVars!98 Int) (n!105 Int) (auxiliaryVars!96 Int) (allVars!97 Int) (loop!103 Int) (generalMTr!106 Int) (coreVars!95 Int))
    (=> (and (not (> someCondition!107 0))
             (< var!101 allVars!97)
             ($main_inv4 coreVars!95 auxiliaryVars!96 allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107))
        ($main_if3 coreVars!95 auxiliaryVars!96 allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107 coreVars!95 auxiliaryVars!96 allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107))))

; forwards $main_inv4 (line 39)
(assert
  (forall ((n!118 Int) (someCondition!120 Int) (loop!116 Int) (edgeVars!111 Int) (var!101 Int) (loopSize!100 Int) (auxiliaryVars!109 Int) (someCondition!107 Int) (loops!99 Int) (allVars!110 Int) (coreVars!108 Int) (n!105 Int) (auxiliaryVars!96 Int) (i!102 Int) (loopSize!113 Int) (i!115 Int) (loops!112 Int) (allVars!97 Int) (loop!103 Int) (loopMTr!117 Int) (loopMTr!104 Int) (generalMTr!106 Int) (generalMTr!119 Int) (coreVars!95 Int) (edgeVars!98 Int) (var!114 Int))
    (=> (and ($main_if3 coreVars!95 auxiliaryVars!96 allVars!97 edgeVars!98 loops!99 loopSize!100 var!101 i!102 loop!103 loopMTr!104 n!105 generalMTr!106 someCondition!107 coreVars!108 auxiliaryVars!109 allVars!110 edgeVars!111 loops!112 loopSize!113 var!114 i!115 loop!116 loopMTr!117 n!118 generalMTr!119 someCondition!120))
        ($main_inv4 coreVars!108 auxiliaryVars!109 allVars!110 edgeVars!111 loops!112 loopSize!113 (+ var!114 1) i!115 loop!116 loopMTr!117 n!118 generalMTr!119 someCondition!120))))

; forwards $main_inv2 (line 31)
(assert
  (forall ((loopSize!126 Int) (i!128 Int) (loopMTr!130 Int) (loops!125 Int) (loop!129 Int) (coreVars!121 Int) (someCondition!133 Int) (edgeVars!124 Int) (var!127 Int) (generalMTr!132 Int) (auxiliaryVars!122 Int) (allVars!123 Int) (n!131 Int))
    (=> (and ($main_sum4 coreVars!121 auxiliaryVars!122 allVars!123 edgeVars!124 loops!125 loopSize!126 var!127 i!128 loop!129 loopMTr!130 n!131 generalMTr!132 someCondition!133))
        ($main_inv2 coreVars!121 auxiliaryVars!122 allVars!123 edgeVars!124 loops!125 loopSize!126 0 0 (+ loop!129 1) loopMTr!130 n!131 (+ generalMTr!132 loopMTr!130) someCondition!133))))

; VERIFIER_assert (not (= (mod n!144 2) 0))
(assert
  (forall ((loop!142 Int) (someCondition!146 Int) (generalMTr!145 Int) (i!141 Int) (edgeVars!137 Int) (n!144 Int) (var!140 Int) (allVars!136 Int) (loopSize!139 Int) (loopMTr!143 Int) (auxiliaryVars!135 Int) (coreVars!134 Int) (loops!138 Int))
    (=> (and (not (not (= (mod n!144 2) 0)))
             ($main_sum2 coreVars!134 auxiliaryVars!135 allVars!136 edgeVars!137 loops!138 loopSize!139 var!140 i!141 loop!142 loopMTr!143 n!144 generalMTr!145 someCondition!146))
        false)))

(check-sat)
