(set-logic HORN)
(set-info :source |
  Benchmark: ../golem/build/NestedLoopInteresting.c
  Generated by Korn 0.4 https://github.com/gernst/korn
|)

(declare-fun $main_inv3 (Int Int) Bool)
(declare-fun $main_inv2 (Int Int) Bool)
(declare-fun $main_inv1 (Int Int) Bool)
(declare-fun $main_sum3 (Int Int) Bool)
(declare-fun $__VERIFIER_assert_pre (Int) Bool)
(declare-fun $__VERIFIER_assert_if1 (Int Int) Bool)
(declare-fun $main_sum2 (Int Int) Bool)
(declare-fun $main_sum1 (Int Int) Bool)
(declare-fun __VERIFIER_assert (Int) Bool)
(declare-fun $__VERIFIER_assert_ERROR (Int Int) Bool)

; label ERROR
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (= cond!1 0)))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_ERROR cond!1 cond!1))))

; error
(assert
  (forall ((cond!1 Int) (cond!2 Int))
    (=> (and ($__VERIFIER_assert_ERROR cond!1 cond!2))
        false)))

; if else
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (not (= cond!1 0))))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_if1 cond!1 cond!1))))

; post __VERIFIER_assert
(assert
  (forall ((cond!1 Int) (cond!3 Int))
    (=> (and ($__VERIFIER_assert_if1 cond!1 cond!3))
        (__VERIFIER_assert cond!1))))

; loop entry $main_inv1 (line 10)
(assert
  (forall ((x1!5 Int))
    (=> (and (<= (- 1) x1!5)
             (<= x1!5 5))
        ($main_inv1 0 x1!5))))

; loop term $main_sum1 (line 10)
(assert
  (forall ((x0!6 Int) (x1!7 Int))
    (=> (and (not (< x1!7 100))
             ($main_inv1 x0!6 x1!7))
        ($main_sum1 x0!6 x1!7))))

; loop entry $main_inv2 (line 12)
(assert
  (forall ((x1!7 Int) (x0!6 Int))
    (=> (and (< x1!7 100)
             ($main_inv1 x0!6 x1!7))
        ($main_inv2 10 x1!7))))

; loop term $main_sum2 (line 12)
(assert
  (forall ((x0!8 Int) (x1!9 Int))
    (=> (and (not (> x0!8 0))
             ($main_inv2 x0!8 x1!9))
        ($main_sum2 x0!8 x1!9))))

; forwards $main_inv2 (line 12)
(assert
  (forall ((x0!8 Int) (x1!9 Int))
    (=> (and (> x0!8 0)
             ($main_inv2 x0!8 x1!9))
        ($main_inv2 (- x0!8 1) (+ x1!9 x0!8)))))

; loop entry $main_inv3 (line 17)
(assert
  (forall ((x0!10 Int) (x1!11 Int))
    (=> (and ($main_sum2 x0!10 x1!11))
        ($main_inv3 (+ x0!10 5) x1!11))))

; loop term $main_sum3 (line 17)
(assert
  (forall ((x0!12 Int) (x1!13 Int))
    (=> (and (not (> x0!12 0))
             ($main_inv3 x0!12 x1!13))
        ($main_sum3 x0!12 x1!13))))

; forwards $main_inv3 (line 17)
(assert
  (forall ((x0!12 Int) (x1!13 Int))
    (=> (and (> x0!12 0)
             ($main_inv3 x0!12 x1!13))
        ($main_inv3 (- x0!12 1) (- x1!13 (- x0!12 1))))))

; forwards $main_inv1 (line 10)
(assert
  (forall ((x0!14 Int) (x1!15 Int))
    (=> (and ($main_sum3 x0!14 x1!15))
        ($main_inv1 x0!14 x1!15))))

; VERIFIER_assert (= x1!17 100)
(assert
  (forall ((x1!17 Int) (x0!16 Int))
    (=> (and (not (= x1!17 100))
             ($main_sum1 x0!16 x1!17))
        false)))

(check-sat)
