(set-logic HORN)
(set-info :source |
  Benchmark: ../golem/build/RealCodeNested/originalcodeSortVarsZ3sceleton1.c
  Generated by Korn 0.4 https://github.com/gernst/korn
|)


(declare-fun $main_sum2 (Int Int Int Int Int Int Int) Bool)
(declare-fun __assert_fail (Int Int Int Int) Bool)
(declare-fun $__VERIFIER_assert_pre (Int) Bool)
(declare-fun $__VERIFIER_assert_if1 (Int Int) Bool)
(declare-fun $main_sum1 (Int Int Int Int Int Int Int) Bool)
(declare-fun $main_if2 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_loop (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_if3 (Int Int Int Int Int Int Int Int Int Int Int Int Int Int) Bool)
(declare-fun $main_inv1 (Int Int Int Int Int Int Int) Bool)
(declare-fun __VERIFIER_assert (Int) Bool)
(declare-fun $__assert_fail_pre (Int Int Int Int) Bool)
(declare-fun $main_inv2 (Int Int Int Int Int Int Int) Bool)
(declare-fun $__VERIFIER_assert_ERROR (Int Int) Bool)

; label ERROR
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (= cond!1 0)))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_ERROR cond!1 cond!1))))

; error
(assert
  (forall ((cond!1 Int) (cond!2 Int))
    (=> (and ($__VERIFIER_assert_ERROR cond!1 cond!2))
        false)))

; if else
(assert
  (forall ((cond!1 Int))
    (=> (and (not (not (not (= cond!1 0))))
             ($__VERIFIER_assert_pre cond!1))
        ($__VERIFIER_assert_if1 cond!1 cond!1))))

; post __VERIFIER_assert
(assert
  (forall ((cond!1 Int) (cond!3 Int))
    (=> (and ($__VERIFIER_assert_if1 cond!1 cond!3))
        (__VERIFIER_assert cond!1))))

; loop entry $main_inv1 (line 18)
(assert
  (forall ((h!8 Int) (todo_size!10 Int) (found!6 Int) (order_reset!5 Int) (t!9 Int) (num_vars!4 Int) (i!7 Int))
    (=> (and (<= 0 h!8)
             (<= h!8 1)
             (= i!7 0)
             (= found!6 0)
             (= order_reset!5 0)
             (<= 50 num_vars!4)
             (<= num_vars!4 10000))
        ($main_inv1 num_vars!4 order_reset!5 found!6 i!7 h!8 t!9 todo_size!10))))

; loop term $main_sum1 (line 18)
(assert
  (forall ((found!13 Int) (t!16 Int) (todo_size!17 Int) (i!14 Int) (h!15 Int) (order_reset!12 Int) (num_vars!11 Int))
    (=> (and (not (< i!14 num_vars!11))
             ($main_inv1 num_vars!11 order_reset!12 found!13 i!14 h!15 t!16 todo_size!17))
        ($main_sum1 num_vars!11 order_reset!12 found!13 i!14 h!15 t!16 todo_size!17))))

; if then
(assert
  (forall ((found!13 Int) (t!16 Int) (todo_size!17 Int) (i!14 Int) (h!15 Int) (order_reset!12 Int) (num_vars!11 Int))
    (=> (and (= t!16 0)
             (< i!14 num_vars!11)
             ($main_inv1 num_vars!11 order_reset!12 found!13 i!14 h!15 t!16 todo_size!17))
        ($main_if2 num_vars!11 order_reset!12 found!13 i!14 h!15 t!16 todo_size!17 num_vars!11 order_reset!12 0 i!14 h!15 t!16 todo_size!17))))

; if else
(assert
  (forall ((found!13 Int) (t!16 Int) (todo_size!17 Int) (i!14 Int) (h!15 Int) (order_reset!12 Int) (num_vars!11 Int))
    (=> (and (not (= t!16 0))
             (< i!14 num_vars!11)
             ($main_inv1 num_vars!11 order_reset!12 found!13 i!14 h!15 t!16 todo_size!17))
        ($main_if2 num_vars!11 order_reset!12 found!13 i!14 h!15 t!16 todo_size!17 num_vars!11 order_reset!12 1 i!14 h!15 t!16 todo_size!17))))

; forwards $main_inv1 (line 18)
(assert
  (forall ((num_vars!18 Int) (found!13 Int) (t!16 Int) (todo_size!17 Int) (h!15 Int) (order_reset!12 Int) (order_reset!19 Int) (todo_size!24 Int) (found!20 Int) (num_vars!11 Int) (i!14 Int) (t!23 Int) (h!22 Int) (i!21 Int))
    (=> (and ($main_if2 num_vars!11 order_reset!12 found!13 i!14 h!15 t!16 todo_size!17 num_vars!18 order_reset!19 found!20 i!21 h!22 t!23 todo_size!24))
        ($main_inv1 num_vars!18 order_reset!19 found!20 (+ i!21 1) h!22 t!23 todo_size!24))))

; loop entry $main_inv2 (line 40)
(assert
  (forall ((order_reset!26 Int) (h!29 Int) (i!28 Int) (todo_size!31 Int) (num_vars!25 Int) (found!27 Int) (t!30 Int))
    (=> (and (= todo_size!31 0)
             ($main_sum1 num_vars!25 order_reset!26 found!27 i!28 h!29 t!30 todo_size!31))
        ($main_inv2 num_vars!25 order_reset!26 found!27 0 h!29 t!30 todo_size!31))))

; loop term $main_sum2 (line 40)
(assert
  (forall ((num_vars!32 Int) (found!34 Int) (h!36 Int) (t!37 Int) (order_reset!33 Int) (i!35 Int) (todo_size!38 Int))
    (=> (and (not (< i!35 num_vars!32))
             ($main_inv2 num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38))
        ($main_sum2 num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38))))

; label loop
(assert
  (forall ((num_vars!32 Int) (found!34 Int) (h!36 Int) (t!37 Int) (order_reset!33 Int) (i!35 Int) (todo_size!38 Int))
    (=> (and (< i!35 num_vars!32)
             ($main_inv2 num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38))
        ($main_loop num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38 num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38))))

; goto loop
(assert
  (forall ((i!42 Int) (found!34 Int) (h!43 Int) (t!37 Int) (order_reset!33 Int) (num_vars!32 Int) (todo_size!45 Int) (num_vars!39 Int) (i!35 Int) (todo_size!38 Int) (found!41 Int) (order_reset!40 Int) (h!36 Int) (t!44 Int))
    (=> (and (= h!43 0)
             ($main_loop num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38 num_vars!39 order_reset!40 found!41 i!42 h!43 t!44 todo_size!45))
        ($main_loop num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38 num_vars!39 (+ order_reset!40 1) found!41 (+ i!42 1) (+ h!43 1) t!44 todo_size!45))))

; if else
(assert
  (forall ((i!42 Int) (found!34 Int) (h!43 Int) (t!37 Int) (order_reset!33 Int) (num_vars!32 Int) (todo_size!45 Int) (num_vars!39 Int) (i!35 Int) (todo_size!38 Int) (found!41 Int) (order_reset!40 Int) (h!36 Int) (t!44 Int))
    (=> (and (not (= h!43 0))
             ($main_loop num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38 num_vars!39 order_reset!40 found!41 i!42 h!43 t!44 todo_size!45))
        ($main_if3 num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38 num_vars!39 order_reset!40 found!41 i!42 h!43 t!44 todo_size!45))))

; forwards $main_inv2 (line 40)
(assert
  (forall ((num_vars!32 Int) (h!50 Int) (found!34 Int) (i!49 Int) (found!48 Int) (order_reset!47 Int) (num_vars!46 Int) (todo_size!52 Int) (t!37 Int) (order_reset!33 Int) (i!35 Int) (todo_size!38 Int) (h!36 Int) (t!51 Int))
    (=> (and ($main_if3 num_vars!32 order_reset!33 found!34 i!35 h!36 t!37 todo_size!38 num_vars!46 order_reset!47 found!48 i!49 h!50 t!51 todo_size!52))
        ($main_inv2 num_vars!46 order_reset!47 found!48 (+ i!49 1) (- h!50 1) t!51 (+ todo_size!52 1)))))

; VERIFIER_assert (< order_reset!54 10)
(assert
  (forall ((order_reset!54 Int) (num_vars!53 Int) (t!58 Int) (found!55 Int) (todo_size!59 Int) (i!56 Int) (h!57 Int))
    (=> (and (not (< order_reset!54 10))
             ($main_sum2 num_vars!53 order_reset!54 found!55 i!56 h!57 t!58 todo_size!59))
        false)))

(check-sat)
