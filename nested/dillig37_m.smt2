(set-logic HORN)
(declare-fun inv (Int Int Int) Bool)
(declare-fun inv1 (Int Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((x1 Int) (y1 Int) (n0 Int))
  (=> (and (= x1 0) (= y1 0) (> n0 0)) (inv x1 y1 n0))))
(assert (forall ((n0 Int) (x1 Int) (y1 Int) (n1 Int))
  (=> (and (inv x1 y1 n0) (= n1 (- n0 1))) (inv1 x1 y1 n1))))
(assert (forall ((y0 Int) (x0 Int) (x1 Int) (y1 Int) (n0 Int))
  (=> (and (inv1 x0 y0 n0) (< x0 n0) (or (= y1 x0) (= y1 y0)) (= x1 (+ x0 1)))
      (inv1 x1 y1 n0))))
(assert (forall ((n0 Int) (x1 Int) (y1 Int) (n1 Int))
  (=> (and (inv1 x1 y1 n0) (= n1 (+ n0 1))) (inv x1 y1 n1))))
(assert (forall ((x1 Int) (y1 Int) (n0 Int))
  (let ((a!1 (and (inv x1 y1 n0) (>= x1 n0) (not (and (<= 0 y1) (<= y1 n0))))))
    (=> a!1 fail))))
(assert (=> fail false))
(check-sat)
