(set-logic HORN)
(declare-fun inv1 (Int Int) Bool)
(declare-fun inv3 (Int Int) Bool)
(declare-fun fail () Bool)
(assert (forall ((i Int) (j Int)) (=> (= i (* j 3)) (inv1 i j))))
(assert (forall ((i Int) (i1 Int) (j Int))
  (=> (and (inv1 i j) (= i1 (+ i 1))) (inv3 i1 j))))
(assert (forall ((i Int) (j Int) (i1 Int) (j1 Int))
  (=> (and (inv3 i j) (= i1 (+ i 3)) (= j1 (+ j 1))) (inv3 i1 j1))))
(assert (forall ((i Int) (j Int) (i1 Int) (j1 Int))
  (=> (and (inv3 i j) (= i1 (+ i 2)) (= j1 j)) (inv1 i1 j1))))
(assert (forall ((j Int) (i Int))
  (let ((a!1 (and (inv1 i j) (not (= (mod i 3) 0)))))
    (=> a!1 fail))))
(assert (=> fail false))
(check-sat)
